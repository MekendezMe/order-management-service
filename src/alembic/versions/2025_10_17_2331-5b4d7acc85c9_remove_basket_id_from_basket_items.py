"""remove_basket_id_from_basket_items

Revision ID: 5b4d7acc85c9
Revises: 0e1457bc5224
Create Date: 2025-10-17 23:31:02.248270

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5b4d7acc85c9"
down_revision: Union[str, Sequence[str], None] = "0e1457bc5224"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "basket_products", sa.Column("user_id", sa.Integer(), nullable=False)
    )
    op.create_foreign_key(
        op.f("fk_basket_products_user_id_users"),
        "basket_products",
        "users",
        ["user_id"],
        ["id"],
    )
    op.drop_column("basket_products", "basket_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "basket_products",
        sa.Column(
            "basket_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_basket_products_user_id_users"),
        "basket_products",
        type_="foreignkey",
    )
    op.create_foreign_key(
        op.f("fk_basket_products_basket_id_baskets"),
        "basket_products",
        "baskets",
        ["basket_id"],
        ["id"],
    )
    op.drop_column("basket_products", "user_id")
    op.create_table(
        "baskets",
        sa.Column(
            "user_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_baskets_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_baskets")),
    )
    # ### end Alembic commands ###
