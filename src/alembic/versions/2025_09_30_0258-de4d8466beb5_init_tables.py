"""init tables

Revision ID: de4d8466beb5
Revises: e50d932a150c
Create Date: 2025-09-30 02:58:34.673567

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "de4d8466beb5"
down_revision: Union[str, Sequence[str], None] = "e50d932a150c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "authors",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_authors")),
        sa.UniqueConstraint("name", name=op.f("uq_authors_name")),
    )
    op.create_table(
        "basket_statuses",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_basket_statuses")),
        sa.UniqueConstraint("name", name=op.f("uq_basket_statuses_name")),
    )
    op.create_table(
        "order_statuses",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_order_statuses")),
        sa.UniqueConstraint("name", name=op.f("uq_order_statuses_name")),
    )
    op.create_table(
        "roles",
        sa.Column("name", sa.String(length=30), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_roles")),
        sa.UniqueConstraint("name", name=op.f("uq_roles_name")),
    )
    op.create_table(
        "products",
        sa.Column("article", sa.String(length=9), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=150), nullable=False),
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column(
            "discount_price", sa.Numeric(precision=10, scale=2), nullable=False
        ),
        sa.Column("stock_quantity", sa.Integer(), nullable=False),
        sa.Column("image", sa.String(length=200), nullable=False),
        sa.Column("minimal_age", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["author_id"],
            ["authors.id"],
            name=op.f("fk_products_author_id_authors"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_products")),
        sa.UniqueConstraint("article", name=op.f("uq_products_article")),
    )
    op.create_table(
        "baskets",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["basket_statuses.id"],
            name=op.f("fk_baskets_status_id_basket_statuses"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_baskets_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_baskets")),
    )
    op.create_table(
        "orders",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("count_products", sa.Integer(), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["status_id"],
            ["order_statuses.id"],
            name=op.f("fk_orders_status_id_order_statuses"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_orders_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_orders")),
    )
    op.create_table(
        "reviews",
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("comment", sa.String(length=200), nullable=False),
        sa.Column("rating", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("fk_reviews_product_id_products"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name=op.f("fk_reviews_user_id_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_reviews")),
    )
    op.create_table(
        "basket_products",
        sa.Column("basket_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["basket_id"],
            ["baskets.id"],
            name=op.f("fk_basket_products_basket_id_baskets"),
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("fk_basket_products_product_id_products"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_basket_products")),
    )
    op.create_table(
        "order_products",
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("price", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
            name=op.f("fk_order_products_order_id_orders"),
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("fk_order_products_product_id_products"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_order_products")),
    )
    op.add_column(
        "users", sa.Column("email", sa.String(length=50), nullable=False)
    )
    op.add_column(
        "users", sa.Column("password", sa.String(length=150), nullable=False)
    )
    op.add_column(
        "users", sa.Column("name", sa.String(length=30), nullable=False)
    )
    op.add_column(
        "users", sa.Column("surname", sa.String(length=30), nullable=False)
    )
    op.add_column("users", sa.Column("age", sa.Integer(), nullable=False))
    op.add_column("users", sa.Column("role_id", sa.Integer(), nullable=False))
    op.add_column(
        "users", sa.Column("confirmed", sa.Boolean(), nullable=False)
    )
    op.add_column(
        "users", sa.Column("is_active", sa.Boolean(), nullable=False)
    )
    op.add_column(
        "users", sa.Column("created_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "users", sa.Column("updated_at", sa.DateTime(), nullable=False)
    )
    op.drop_constraint(op.f("uq_users_login"), "users", type_="unique")
    op.drop_constraint(op.f("uq_users_username"), "users", type_="unique")
    op.create_unique_constraint(op.f("uq_users_email"), "users", ["email"])
    op.create_foreign_key(
        op.f("fk_users_role_id_roles"), "users", "roles", ["role_id"], ["id"]
    )
    op.drop_column("users", "username")
    op.drop_column("users", "login")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("login", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "users",
        sa.Column(
            "username", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(
        op.f("fk_users_role_id_roles"), "users", type_="foreignkey"
    )
    op.drop_constraint(op.f("uq_users_email"), "users", type_="unique")
    op.create_unique_constraint(
        op.f("uq_users_username"),
        "users",
        ["username"],
        postgresql_nulls_not_distinct=False,
    )
    op.create_unique_constraint(
        op.f("uq_users_login"),
        "users",
        ["login"],
        postgresql_nulls_not_distinct=False,
    )
    op.drop_column("users", "updated_at")
    op.drop_column("users", "created_at")
    op.drop_column("users", "is_active")
    op.drop_column("users", "confirmed")
    op.drop_column("users", "role_id")
    op.drop_column("users", "age")
    op.drop_column("users", "surname")
    op.drop_column("users", "name")
    op.drop_column("users", "password")
    op.drop_column("users", "email")
    op.drop_table("order_products")
    op.drop_table("basket_products")
    op.drop_table("reviews")
    op.drop_table("orders")
    op.drop_table("baskets")
    op.drop_table("products")
    op.drop_table("roles")
    op.drop_table("order_statuses")
    op.drop_table("basket_statuses")
    op.drop_table("authors")
    # ### end Alembic commands ###
